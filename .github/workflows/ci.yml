name: CI

on:
  pull_request:

env:
  APP_DEV: ${{ secrets.APP_DEV }}
  PROJECT_HOST: ${{ secrets.PROJECT_HOST }}
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  SERVER_NAME: ${{ secrets.SERVER_NAME }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PWD: ${{ secrets.DB_PWD }}

jobs:
    tests:
      runs-on: ubuntu-latest

      services:
        postgres:
          image: postgres
          env:
            POSTGRES_DB: $DB_NAME
            POSTGRES_USER: $DB_USER
            POSTGRES_PASSWORD: $DB_PWD
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      env:
        DATABASE_URL: postgres://$DB_USER:$DB_PWD@localhost:5432/$DB_NAME?sslmode=disable&charset=utf8

      steps:
        - uses: actions/checkout@v2

        - name: Setup PHP, extensions and composer with shivammathur/setup-php
          uses: shivammathur/setup-php@v2
          with:
            php-version: '8.0'
            extensions: mbstring, xml, ctype, iconv, intl, dom, filter, gd, iconv, json, pdo, pgsql
            tools: composer:v2, phpunit:9.5, phpstan
          env:
            update: true

        # - name: Validate composer.json and composer.lock
        #   working-directory: ./AccountService
        #   run: |
        #     composer validate

        - name: Cache Composer packages
          id: composer-cache
          uses: actions/cache@v2
          with:
            working_dir: ./app
            path: vendor
            key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-php-
        - name: Install dependencies
          working-directory: ./app
          run: |
            composer install --no-progress --prefer-dist --optimize-autoloader

        - name: Run phpunit for app
          working-directory: ./app
          run: vendor/bin/pest

        - name: Run coding standards checks
          working-directory: ./app
          run: |
            vendor/bin/phpstan analyse
            vendor/bin/ecs check
